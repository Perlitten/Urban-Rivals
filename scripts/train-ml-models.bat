@echo off
REM Urban Rivals ML Training Pipeline - Windows Version
REM –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±—É—á–µ–Ω–∏—è ML –º–æ–¥–µ–ª–µ–π

echo üöÄ Urban Rivals ML Training Pipeline
echo ====================================

REM –ü—Ä–æ–≤–µ—Ä–∫–∞ Python
python --version >nul 2>&1
if errorlevel 1 (
    echo ‚ùå Python –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Python 3.8+
    echo    –°–∫–∞—á–∞—Ç—å: https://www.python.org/downloads/
    pause
    exit /b 1
)

REM –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if not exist "ml_env" (
    echo üì¶ –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è...
    python -m venv ml_env
)

REM –ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
echo ‚ö° –ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è...
call ml_env\Scripts\activate.bat

REM –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
echo üìã –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...
python -m pip install --upgrade pip

REM –°–æ–∑–¥–∞–µ–º requirements.txt –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if not exist "requirements-ml.txt" (
    echo tensorflow==2.15.0> requirements-ml.txt
    echo tensorflowjs==4.15.0>> requirements-ml.txt
    echo numpy==1.24.3>> requirements-ml.txt
    echo pandas==2.0.3>> requirements-ml.txt
    echo scikit-learn==1.3.0>> requirements-ml.txt
    echo joblib==1.3.2>> requirements-ml.txt
    echo requests==2.31.0>> requirements-ml.txt
    echo matplotlib==3.7.2>> requirements-ml.txt
    echo seaborn==0.12.2>> requirements-ml.txt
    echo jupyter==1.0.0>> requirements-ml.txt
)

pip install -r requirements-ml.txt

REM –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–æ–∫
echo üìÅ –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø–∞–ø–æ–∫...
if not exist "datasets" mkdir datasets
if not exist "trained_models" mkdir trained_models
if not exist "trained_models\tensorflow" mkdir trained_models\tensorflow
if not exist "trained_models\sklearn" mkdir trained_models\sklearn
if not exist "trained_models\tensorflowjs" mkdir trained_models\tensorflowjs
if not exist "models_backup" mkdir models_backup

REM –®–∞–≥ 1: –°–æ–∑–¥–∞–Ω–∏–µ –¥–∞—Ç–∞—Å–µ—Ç–∞
echo.
echo üóÇÔ∏è –®–∞–≥ 1: –°–æ–∑–¥–∞–Ω–∏–µ –¥–∞—Ç–∞—Å–µ—Ç–∞...
echo ===============================
if exist "src\ml\training\dataset.py" (
    python src\ml\training\dataset.py
) else (
    echo ‚ùå –§–∞–π–ª dataset.py –Ω–µ –Ω–∞–π–¥–µ–Ω
    pause
    exit /b 1
)

REM –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥–∞—Ç–∞—Å–µ—Ç–∞
if not exist "datasets\training_data.json" (
    echo ‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥–∞—Ç–∞—Å–µ—Ç–∞
    pause
    exit /b 1
)

echo ‚úÖ –î–∞—Ç–∞—Å–µ—Ç —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ

REM –®–∞–≥ 2: –û–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–µ–π
echo.
echo ü§ñ –®–∞–≥ 2: –û–±—É—á–µ–Ω–∏–µ ML –º–æ–¥–µ–ª–µ–π...
echo ===============================
if exist "src\ml\training\train_models.py" (
    python src\ml\training\train_models.py
) else (
    echo ‚ùå –§–∞–π–ª train_models.py –Ω–µ –Ω–∞–π–¥–µ–Ω
    pause
    exit /b 1
)

REM –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—É—á–µ–Ω–∏—è –º–æ–¥–µ–ª–µ–π
if not exist "trained_models\tensorflowjs\battle_predictor" (
    echo ‚ùå –û—à–∏–±–∫–∞ –æ–±—É—á–µ–Ω–∏—è –º–æ–¥–µ–ª–µ–π
    pause
    exit /b 1
)

echo ‚úÖ –ú–æ–¥–µ–ª–∏ –æ–±—É—á–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ

REM –®–∞–≥ 4: –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–µ–π –≤ –ø—Ä–æ–µ–∫—Ç
echo.
echo üì¶ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –º–æ–¥–µ–ª–µ–π –≤ –ø—Ä–æ–µ–∫—Ç...
echo =======================================

REM –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –º–æ–¥–µ–ª–µ–π –≤ assets
if not exist "public\assets" mkdir public\assets
if not exist "public\assets\models" mkdir public\assets\models

REM –ö–æ–ø–∏—Ä—É–µ–º TensorFlow.js –º–æ–¥–µ–ª–∏
echo üìã –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ TensorFlow.js –º–æ–¥–µ–ª–µ–π...
xcopy "trained_models\tensorflowjs\*" "public\assets\models\" /E /I /Y >nul

REM –ö–æ–ø–∏—Ä—É–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
copy "trained_models\models_metadata.json" "public\assets\models\" >nul

echo ‚úÖ –ú–æ–¥–µ–ª–∏ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã –≤ public\assets\models\

REM –®–∞–≥ 5: –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞
echo.
echo üíæ –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ –º–æ–¥–µ–ª–µ–π...
for /f "tokens=2 delims==" %%I in ('wmic os get localdatetime /value') do if not "%%I"=="" set datetime=%%I
set timestamp=%datetime:~0,8%_%datetime:~8,6%
set backup_name=models_backup_%timestamp%.zip

powershell Compress-Archive -Path "trained_models\*" -DestinationPath "models_backup\%backup_name%"
echo ‚úÖ –ë—ç–∫–∞–ø —Å–æ–∑–¥–∞–Ω: models_backup\%backup_name%

REM –î–µ–∞–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
call ml_env\Scripts\deactivate.bat

echo.
echo üéâ ML Training Pipeline –∑–∞–≤–µ—Ä—à—ë–Ω!
echo =================================
echo.
echo üìÅ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:
echo   ‚Ä¢ –î–∞—Ç–∞—Å–µ—Ç: datasets\
echo   ‚Ä¢ –û–±—É—á–µ–Ω–Ω—ã–µ –º–æ–¥–µ–ª–∏: trained_models\
echo   ‚Ä¢ –ú–æ–¥–µ–ª–∏ –¥–ª—è –±—Ä–∞—É–∑–µ—Ä–∞: public\assets\models\
echo   ‚Ä¢ –ë—ç–∫–∞–ø: models_backup\%backup_name%
echo.
echo üöÄ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:
echo   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –º–æ–¥–µ–ª–∏ –≤ public\assets\models\
echo   2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ 'npm run build' –¥–ª—è —Å–±–æ—Ä–∫–∏
echo   3. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ ML —Ñ—É–Ω–∫—Ü–∏–∏ –≤ –±—Ä–∞—É–∑–µ—Ä–µ
echo.
echo üí° –ü–æ–¥—Å–∫–∞–∑–∫–∞: –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ 'npm run dev' –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏

pause 